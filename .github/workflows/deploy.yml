name: Deploy

on:
  push:
    branches: [main]

jobs:
  # Detect which workspaces have changes
  detect-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: HEAD~1
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'
            infrastructure:
              - 'infrastructure/**'
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
      infrastructure: ${{ steps.changes.outputs.infrastructure }}

  # Deploy Infrastructure (must go first)
  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.infrastructure == 'true'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy infrastructure
        run: yarn workspace @verse/infrastructure cdk deploy --all --require-approval never

  # Deploy Backend
  deploy-backend:
    runs-on: ubuntu-latest
    needs: [detect-changes, deploy-infrastructure]
    if: needs.detect-changes.outputs.backend == 'true' && (success() || needs.deploy-infrastructure.result == 'skipped')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy backend functions
        run: yarn workspace @verse/backend deploy

  # Deploy Frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [detect-changes, deploy-backend]
    if: needs.detect-changes.outputs.frontend == 'true' && (success() || needs.deploy-backend.result == 'skipped')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build frontend
        run: yarn workspace @verse/frontend expo export --platform web

      - name: Deploy to hosting
        run: |
          # This will be configured later when hosting is set up
          echo "Frontend deployment placeholder"
